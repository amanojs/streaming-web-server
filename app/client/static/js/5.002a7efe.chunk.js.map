{"version":3,"sources":["components/InputText/index.tsx","components/CreateForm/Presenter.tsx","components/CreateForm/index.tsx","components/Volume/Presenter.tsx","components/Volume/index.tsx","components/YoutubeController/Presenter.tsx","components/YoutubeController/index.tsx","components/PlayingBoard/Presenter.tsx","components/PlayingBoard/index.tsx","components/YoutubeWrap/Presenter.tsx","components/YoutubeWrap/index.tsx","components/AddForm/Presenter.tsx","components/AddForm/index.tsx","pages/Room/Presenter.tsx","pages/Room/index.tsx"],"names":["InputText","props","style","color","padding","fontSize","fontWeight","label","TextField","fullWidth","error","helperText","msg","variant","value","onChange","e","target","placeholder","Presenter","classes","makeStyles","form_card","width","useStyles","Card","className","onSubmit","submitEvent","Grid","container","justify","spacing","item","xs","Box","display","justifyContent","alignItems","lineHeight","marginBottom","head","inputs","map","input","Button","type","disabled","load","disableElevation","CircularProgress","size","btn","CreateForm","bind","validateAll","errorFlag","validate","a","preventDefault","defaultProps","IconButton","onClick","isMute","VolumeOff","VolumeUp","Hidden","xsDown","isSmartPhone","VolumeSlider","valueLabelDisplay","step","min","max","volume","marginLeft","withStyles","root","paddingTop","thumb","height","backgroundColor","border","boxShadow","active","valueLabel","left","paddingRight","background","textShadow","track","borderRadius","rail","Slider","Volume","navigator","userAgent","match","PrettoSlider","marginTop","defaultValue","timed","duratioin","sliderOnChange","getAriaValueText","valueLabelFormat","sm","md","lg","xl","wrap","volumeSliderOnChange","volumeOnClick","fastTimed","FastRewind","playOrPause","statusIcon","PlayArrow","Pause","FastForward","YoutubeController","React","setTimed","duration","setDuration","setStatusIcon","checkTimer","youtubeDisp","getDuration","setInterval","currentTime","getCurrentTime","clearInterval","statusCheck","videoStatus","status","changedtime","socket","emit","seekTo","Number","targetTime","pauseVideo","window","setTimeout","playVideo","floorValue","Math","floor","timeH","timeM","timeS","String","padStart","isMuted","unMute","mute","num","setVolumeLog","changeVolume","id","xmlns","viewBox","d","title","PlayingBoard","setTitle","videoId","getTitle","console","log","axios","get","process","params","q","then","data","items","snippet","player","opts","controller","YoutubeWrap","defaultOpts","playerVars","controls","rel","playsinline","fs","disablekb","modestbranding","setUpSocketListenner","listenner","off","on","movie_id","state","setState","cueVideoById","setUpBuffer","time","getAction","participant_id","getPlayerState","playingData","isPlaying","payload","socket_id","this","res","isFirst","onPlay","onPause","onReady","event","agent","toLowerCase","room","isOwner","defaultVolume","getVolume","cookieVolume","Cookie","prev_flag","prev","volumeLog","setVolume","onStateChange","Promise","resolve","undefined","set","addMovieHandler","AddForm","setVideoId","roomId","boxSizing","Dialog","open","nameDialog","createForm","Room","setSocket","setNameDialog","enterId","setEnterId","setLoad","useSelector","history","useHistory","dispach","useDispatch","enqueueSnackbar","useSnackbar","getSocket","rec_socket","getParamValue","cookieName","setUserName","sendNotifiction","horizontal","vertical","push","clearSocket","user","name","key","URLSearchParams","location","search","message","position","screen","anchorOrigin","autoHideDuration","userName","val","response","length","option","room_id","user_name","roomModule","actions","setRoom","joinRoom"],"mappings":"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","file":"static/js/5.002a7efe.chunk.js","sourcesContent":["import * as React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport interface InputTextProps {\n  /** ラベル */\n  label: string;\n  /**プレースホルダ */\n  placeholder?: string;\n  /** インプットテキストの値 */\n  value: string;\n  /** エラー状態 */\n  error: boolean;\n  /** エラー時に表示するメッセージ */\n  msg: string;\n  /** インプットテキストの値が変更されるたびに実行される処理 */\n  onChange: (value: string) => void;\n}\n\n/** ラベル付きのインプットテキスト */\nexport const InputText: React.FC<InputTextProps> = (props: InputTextProps) => {\n  return (\n    <div>\n      <div style={{ color: '#606060', padding: '0 0 3px 0', fontSize: '13px', fontWeight: 'bold' }}>{props.label}</div>\n      <TextField\n        fullWidth\n        error={props.error}\n        helperText={props.msg}\n        variant=\"outlined\"\n        value={props.value}\n        onChange={(e) => props.onChange(e.target.value)}\n        color=\"secondary\"\n        placeholder={props.placeholder}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, Button, Box, CircularProgress } from '@material-ui/core';\nimport { InputText } from '../InputText';\nimport { InputSub } from './index';\nimport './main.css';\n\nexport interface PresenterProps {\n  width: string;\n  head: string;\n  btn: string;\n  inputs: InputSub[];\n  load: boolean;\n  submitEvent: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  const useStyles = makeStyles({\n    form_card: {\n      width: props.width,\n      padding: '55px 0'\n    }\n  });\n  const classes = useStyles();\n  return (\n    <Card className={classes.form_card}>\n      <form style={{ width: '100%' }} onSubmit={props.submitEvent}>\n        <Grid container justify=\"center\" spacing={1}>\n          <Grid item xs={10}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Box\n                  className=\"create_room_head\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  lineHeight=\"0px\"\n                  marginBottom=\"30px\"\n                >\n                  <span>{props.head}</span>\n                </Box>\n              </Grid>\n\n              {props.inputs.map((input: InputSub) => {\n                return (\n                  <Grid item xs={12} key={input.label}>\n                    <InputText\n                      label={input.label}\n                      error={input.error}\n                      msg={input.msg}\n                      placeholder={input.placeholder}\n                      value={input.value}\n                      onChange={input.onChange}\n                    />\n                  </Grid>\n                );\n              })}\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  disabled={props.load}\n                  disableElevation\n                  color=\"secondary\"\n                >\n                  {props.load ? <CircularProgress size={24} style={{ color: '#fff' }} /> : props.btn}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { Presenter } from './Presenter';\nimport { InputTextProps } from '../InputText';\n\nexport interface InputSub extends InputTextProps {\n  validate: (val: string) => { error: boolean; msg: string };\n}\n\nexport interface CreateFormProps {\n  /** 横幅 px や % で指定 */\n  width: string;\n  /** フォームタイトル*/\n  head: string;\n  /** フォームのサブミットボタンのタイトル */\n  btn: string;\n  /** ロード中か */\n  load: boolean;\n  /** InputText型にバリデーション処理を加えたインプットの配列 */\n  inputs: InputSub[];\n  /** サブミット処理(オールバリデーション処理の後に実行されます) */\n  onSubmit: () => any;\n}\n\n/** タイトルとインプットテキストとサブミットボタンのシンプルなフォーム */\nexport const CreateForm: React.FC<CreateFormProps> = (props: CreateFormProps) => {\n  for (const input of props.inputs) {\n    input.onChange = input.onChange.bind(input);\n  }\n\n  const validateAll = () => {\n    let errorFlag = false;\n    for (const input of props.inputs) {\n      input.onChange(input.value);\n      const { error } = input.validate(input.value);\n      if (error) errorFlag = true;\n    }\n    return errorFlag;\n  };\n\n  const submitEvent = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validateAll()) {\n      return;\n    }\n    await props.onSubmit();\n  };\n\n  return (\n    <Presenter\n      width={props.width}\n      head={props.head}\n      btn={props.btn}\n      inputs={props.inputs}\n      load={props.load}\n      submitEvent={submitEvent}\n    />\n  );\n};\nCreateForm.defaultProps = {\n  width: '100%'\n};\n","import * as React from 'react';\r\nimport { Slider, IconButton, withStyles, Hidden } from '@material-ui/core';\r\nimport { VolumeOff, VolumeUp } from '@material-ui/icons';\r\n\r\ninterface PresenterProps {\r\n  isMute: boolean;\r\n  volume: number;\r\n  onChange: (e: React.ChangeEvent<any>, value: number | number[]) => void;\r\n  onClick: () => void;\r\n  isSmartPhone: () => boolean;\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <IconButton size=\"small\" color=\"secondary\" onClick={props.onClick}>\r\n        {props.isMute ? <VolumeOff></VolumeOff> : <VolumeUp></VolumeUp>}\r\n      </IconButton>\r\n      <Hidden xsDown>\r\n        {!props.isSmartPhone() && (\r\n          <VolumeSlider\r\n            valueLabelDisplay=\"off\"\r\n            step={0.001}\r\n            min={0.0}\r\n            max={100.0}\r\n            value={props.volume}\r\n            onChange={props.onChange}\r\n            style={{\r\n              width: '100%',\r\n              marginLeft: '12px'\r\n            }}\r\n          ></VolumeSlider>\r\n        )}\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VolumeSlider = withStyles({\r\n  root: {\r\n    color: '#1dd1a1',\r\n    paddingTop: 0,\r\n    marginBottom: 0,\r\n    padding: 0\r\n  },\r\n  thumb: {\r\n    height: 14,\r\n    width: 14,\r\n    backgroundColor: 'currentColor',\r\n    border: '2px solid currentColor',\r\n    '&:hover': {\r\n      height: 14,\r\n      width: 14,\r\n      backgroundColor: 'currentColor',\r\n      boxShadow: 'none'\r\n    },\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-80%)',\r\n    '& *': {\r\n      paddingRight: 5,\r\n      background: 'transparent',\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n      textShadow: '2px 2px 4px #222'\r\n    }\r\n  },\r\n  track: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  }\r\n})(Slider);\r\n","import * as React from 'react';\r\nimport { Presenter } from './Presenter';\r\n\r\nexport interface VolumeProps {\r\n  isMute: boolean;\r\n  volume: number;\r\n  onChange: (e: React.ChangeEvent<any>, value: number | number[]) => void;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Volume: React.FC<VolumeProps> = (props: VolumeProps) => {\r\n  /** スマートフォンからのアクセスかどうかの判定 */\r\n  const isSmartPhone = (): boolean => {\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <Presenter\r\n      onClick={props.onClick}\r\n      onChange={props.onChange}\r\n      isMute={props.isMute}\r\n      volume={props.volume}\r\n      isSmartPhone={isSmartPhone}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\nimport YouTube from 'react-youtube';\nimport { YouTubePlayer } from 'youtube-player/dist/types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Slider, IconButton, Hidden } from '@material-ui/core';\nimport { PlayArrow, Pause, FastForward, FastRewind } from '@material-ui/icons';\nimport { Volume } from '../Volume';\n\nexport interface PresenterProps {\n  statusIcon: 'play' | 'pause';\n  timed: number;\n  duratioin: number;\n  sliderOnChange: (e: any, value: any) => void;\n  fastTimed: (value: number) => void;\n  valueLabelFormat: (value: number) => string;\n  playOrPause: () => void;\n  isMute: boolean;\n  volumeOnClick: () => any;\n  volumeSliderOnChange: (e: React.ChangeEvent<any>, value: number | number[]) => any;\n  volume: number;\n}\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#1dd1a1',\n    paddingTop: 0\n  },\n  thumb: {\n    height: 10,\n    width: 10,\n    backgroundColor: 'currentColor',\n    marginTop: -1,\n    marginLeft: -1,\n    border: '2px solid currentColor',\n    '&:hover': {\n      boxShadow: '2px 2px 8px currentColor',\n      height: 16,\n      width: 16,\n      marginTop: -6,\n      marginLeft: -10,\n      backgroundColor: 'currentColor'\n    },\n    '&:focus': {\n      boxShadow: '2px 2px 8px currentColor'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-80%)',\n    '& *': {\n      paddingRight: 5,\n      background: 'transparent',\n      color: '#fff',\n      fontWeight: 'bold',\n      textShadow: '2px 2px 4px #222'\n    }\n  },\n  track: {\n    height: 8,\n    borderRadius: 0\n  },\n  rail: {\n    height: 8,\n    borderRadius: 0\n  }\n})(Slider);\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  return (\n    <React.Fragment>\n      <Grid container style={{ background: '#fff', marginTop: '-11px' }}>\n        <Grid item xs={12}>\n          <PrettoSlider\n            style={{ height: 'auto' }}\n            valueLabelDisplay=\"auto\"\n            defaultValue={0.0}\n            value={props.timed}\n            min={0.0}\n            max={props.duratioin}\n            step={0.000000001}\n            onChange={props.sliderOnChange}\n            getAriaValueText={props.valueLabelFormat}\n            valueLabelFormat={props.valueLabelFormat}\n          />\n        </Grid>\n        <Grid container alignItems=\"center\" style={{ padding: '0 20px 10px 20px' }}>\n          <Grid item xs={1} sm={3} md={3} lg={3} xl={3} style={{ color: '#777' }}>\n            <Grid container alignItems=\"center\" wrap=\"wrap\">\n              <Hidden xsDown>\n                <Grid item sm={12} md={12} lg={5} xl={3}>\n                  <span>{props.valueLabelFormat(props.timed)}</span>/\n                  <span>{props.valueLabelFormat(props.duratioin)}</span>\n                </Grid>\n              </Hidden>\n              <Grid item sm={12} md={12} lg={7} xl={5}>\n                <Volume\n                  isMute={props.isMute}\n                  onChange={props.volumeSliderOnChange}\n                  onClick={props.volumeOnClick}\n                  volume={props.volume}\n                ></Volume>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\n              <Grid item>\n                <IconButton size=\"medium\" onClick={() => props.fastTimed(-15)}>\n                  <FastRewind fontSize=\"small\" color=\"secondary\" />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <IconButton onClick={props.playOrPause}>\n                  {props.statusIcon === 'play' ? (\n                    <PlayArrow fontSize=\"large\" color=\"secondary\" />\n                  ) : (\n                    <Pause fontSize=\"large\" color=\"secondary\" />\n                  )}\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <IconButton size=\"medium\" onClick={() => props.fastTimed(15)}>\n                  <FastForward fontSize=\"small\" color=\"secondary\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={1} sm={3} md={3} lg={3} xl={3}></Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport { Presenter } from './Presenter';\nimport { YouTubePlayer } from 'youtube-player/dist/types';\n//import { PresenterProps } from './Presenter';\n\nexport interface YoutubeControllerProps {\n  socket: SocketIOClient.Socket;\n  youtubeDisp: YouTubePlayer | undefined;\n  videoStatus: number;\n  volume: number;\n  isMuted: boolean;\n  mute: () => void;\n  unMute: () => void;\n  changeVolume: (num: number) => void;\n  setVolumeLog: (num: number) => void;\n}\n\nexport const YoutubeController: React.FC<YoutubeControllerProps> = (props: YoutubeControllerProps) => {\n  const [timed, setTimed] = React.useState<number>(0);\n  const [duration, setDuration] = React.useState<number>(0);\n  const [statusIcon, setStatusIcon] = React.useState<'play' | 'pause'>('pause');\n\n  let checkTimer: NodeJS.Timeout | null = null;\n\n  React.useEffect(() => {\n    if (props.youtubeDisp) {\n      setDuration(props.youtubeDisp.getDuration());\n\n      checkTimer = setInterval(\n        (props) => {\n          const currentTime = props.youtubeDisp.getCurrentTime();\n          setTimed(currentTime);\n        },\n        150,\n        props\n      );\n    }\n    return () => {\n      if (checkTimer) {\n        clearInterval(checkTimer);\n      }\n    };\n  }, [props.youtubeDisp]);\n\n  React.useEffect(() => {\n    if (props.youtubeDisp) {\n      const duration = props.youtubeDisp.getDuration();\n      setDuration(duration);\n    }\n    statusCheck(props.videoStatus);\n  }, [props.videoStatus]);\n\n  /** 再生バー処理 */\n  const sliderOnChange = (changedtime: MouseEvent, value: number | number[]) => {\n    if (props.youtubeDisp) {\n      props.socket.emit('youtube_seek', value);\n      props.youtubeDisp.seekTo(Number(value), true);\n      setTimed(Number(value));\n    }\n  };\n\n  /** 引数の秒数分動画をスキップする */\n  const fastTimed = (value: number) => {\n    if (props.youtubeDisp) {\n      let targetTime = timed + value;\n      if (duration <= targetTime) {\n        targetTime = duration - 0.2;\n        setTimed(targetTime);\n        props.youtubeDisp.pauseVideo();\n        window.setTimeout(() => {\n          props.youtubeDisp?.playVideo();\n        }, 200);\n      }\n      props.youtubeDisp.seekTo(targetTime, true);\n      props.socket.emit('youtube_seek', targetTime);\n    }\n  };\n\n  /** 少数で渡された秒数を hh:mm:ss のフォーマットで返す */\n  const valueLabelFormat = (value: number): string => {\n    if (!value) {\n      return '00:00';\n    }\n    const floorValue = Math.floor(value);\n    const timeH = Math.floor((floorValue % (24 * 60 * 60)) / (60 * 60));\n    const timeM = Math.floor(((floorValue % (24 * 60 * 60)) % (60 * 60)) / 60);\n    const timeS = ((floorValue % (24 * 60 * 60)) % (60 * 60)) % 60;\n    if (timeH === 0) {\n      return String(timeM).padStart(2, '0') + ':' + String(timeS).padStart(2, '0');\n    } else {\n      return (\n        String(timeH).padStart(2, '0') + ':' + String(timeM).padStart(2, '0') + ':' + String(timeS).padStart(2, '0')\n      );\n    }\n  };\n\n  /** 動画再生状況をセット */\n  const statusCheck = (status: number) => {\n    // https://developers.google.com/youtube/iframe_api_reference?hl=ja#Adding_event_listener 参照\n    switch (status) {\n      case -1: // 未開始\n        setStatusIcon('play');\n        break;\n      case 0: // 終了\n        setStatusIcon('play');\n        break;\n      case 1: // 再生中\n        setStatusIcon('pause');\n        break;\n      case 2: // 停止\n        setStatusIcon('play');\n        break;\n      case 3: // バッファリング中\n        setStatusIcon('play');\n        break;\n      case 5: // 頭出し済み\n        setStatusIcon('play');\n        break;\n    }\n  };\n\n  /** 再生、停止ボタンクリック処理 */\n  const playOrPause = () => {\n    if (statusIcon === 'play') {\n      props.youtubeDisp?.playVideo();\n    } else {\n      props.youtubeDisp?.pauseVideo();\n    }\n  };\n\n  /** ミュート状態の切り替え */\n  const volumeOnClick = () => {\n    props.isMuted ? props.unMute() : props.mute();\n  };\n\n  /** ボリューム変更処理 */\n  const volumeSliderOnChange = (e: React.ChangeEvent, value: number | number[]) => {\n    const num = Number(value);\n\n    switch (e.type) {\n      case 'mousemove':\n        break;\n      case 'mousedown':\n        // クリック時の処理\n        if (num > 5) {\n          props.setVolumeLog(num);\n        }\n        break;\n      default:\n      // デフォルト処理\n    }\n\n    // ボリュームを変更\n    props.changeVolume(num);\n    // ボリュームの値を参照しミュート状態を切り替え\n    num < 1 ? props.mute() : props.isMuted ? props.unMute() : false;\n  };\n\n  return (\n    <Presenter\n      statusIcon={statusIcon}\n      timed={timed}\n      sliderOnChange={sliderOnChange}\n      fastTimed={fastTimed}\n      duratioin={duration}\n      valueLabelFormat={valueLabelFormat}\n      playOrPause={playOrPause}\n      volume={props.volume}\n      volumeOnClick={volumeOnClick}\n      volumeSliderOnChange={volumeSliderOnChange}\n      isMute={props.isMuted}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Grid, Box } from '@material-ui/core';\n\ninterface PresenterProps {\n  title: string;\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  return (\n    <Grid container className=\"PlayingBoard\" alignItems=\"center\">\n      <Grid item xs={1}>\n        <Box>\n          <svg id=\"icon-audio-disc\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n            <path d=\"M32 2a30 30 0 1 0 30 30A30 30 0 0 0 32 2zm0 58a28 28 0 1 1 28-28 28 28 0 0 1-28 28z\" />\n            <path d=\"M32 6A26 26 0 0 0 6 32h2A24 24 0 0 1 32 8zM32 56v2a26 26 0 0 0 26-26h-2a24 24 0 0 1-24 24z\" />\n            <path d=\"M32 52v2a22 22 0 0 0 22-22h-2a20 20 0 0 1-20 20z\" />\n            <path d=\"M46 32a14 14 0 1 0-14 14 14 14 0 0 0 14-14zm-26 0a12 12 0 1 1 12 12 12 12 0 0 1-12-12z\" />\n            <path d=\"M41 32a9 9 0 1 0-9 9 9 9 0 0 0 9-9zm-16 0a7 7 0 1 1 7 7 7 7 0 0 1-7-7z\" />\n            <path d=\"M36 32a4 4 0 1 0-4 4 4 4 0 0 0 4-4zm-6 0a2 2 0 1 1 2 2 2 2 0 0 1-2-2zM6 34h2v2H6z\" />\n          </svg>\n        </Box>\n      </Grid>\n      <Grid item xs={11}>\n        <Box className=\"title\">\n          <p>{props.title}</p>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n","import * as React from 'react';\nimport axios from 'axios';\nimport { Presenter } from './Presenter';\nimport './main.css';\n\ninterface PlayingBoardProps {\n  videoId: string;\n}\n\nexport const PlayingBoard: React.FC<PlayingBoardProps> = (props: PlayingBoardProps) => {\n  const [title, setTitle] = React.useState('');\n  const APIKEY: string = process.env.REACT_APP_YOUTUBE_KEY as string;\n  React.useEffect(() => {\n    if (!props.videoId) return;\n    getTitle();\n  }, [props.videoId]);\n  const getTitle = () => {\n    console.log('youtube videoId', props.videoId);\n    axios\n      .get(`https://www.googleapis.com/youtube/v3/search?key=${APIKEY}&part=id,snippet`, {\n        params: { q: props.videoId }\n      })\n      .then(({ data, status }) => {\n        if (status === 200) {\n          // console.log('title data', data);\n          try {\n            const title = data.items[0].snippet.title;\n            setTitle(title);\n          } catch {\n            setTitle('動画タイトルを取得できませんでした');\n          }\n        }\n      });\n  };\n  return <Presenter title={title} />;\n};\n","import * as React from 'react';\nimport YouTube, { YouTubeProps } from 'react-youtube';\nimport { YouTubePlayer } from 'youtube-player/dist/types';\nimport { YoutubeController } from '../YoutubeController';\nimport { Box, Grid } from '@material-ui/core';\nimport './main.css';\nimport { PlayingBoard } from '../PlayingBoard';\n\nexport interface PresenterProps {\n  player: YouTubeProps;\n  videoId: string;\n  controller: {\n    socket: SocketIOClient.Socket;\n    youtubeDisp: YouTubePlayer | undefined;\n    videoStatus: number;\n    volume: number;\n    isMuted: boolean;\n    changeVolume: (num: number) => void;\n    setVolumeLog: (num: number) => void;\n    mute: () => void;\n    unMute: () => void;\n  };\n  opts: YouTubeProps['opts'];\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  return (\n    <React.Fragment>\n      <Grid container justify=\"center\">\n        {/* 最大化の場合は↓を変更 */}\n        <Grid item xs={12}>\n          <Box style={{ padding: '0 0 10px 0' }}>\n            <Grid container>\n              <Grid item xs={12} sm={6} md={4} lg={5} xl={4}>\n                <PlayingBoard videoId={props.videoId} />\n              </Grid>\n              <Grid style={{ background: 'black' }} item xs={12}>\n                <YouTube {...props.player} opts={props.opts} className=\"youtube_display\" />\n              </Grid>\n              <Grid item style={{ background: '#000' }} xs={12}>\n                <YoutubeController {...props.controller} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/store';\nimport { YouTubePlayer } from 'youtube-player/dist/types';\nimport { Presenter } from './Presenter';\nimport { YouTubeProps } from 'react-youtube';\nimport { RoomState } from '../../store/modules/roomModule';\nimport Cookie from 'js-cookie';\n\ninterface YoutubeWrapProps {\n  socket: SocketIOClient.Socket;\n  room: RoomState;\n}\n\ninterface YoutubeWrapState {\n  youtubeDisp: YouTubePlayer | undefined;\n  videoId: string;\n  videoStatus: number;\n  getAction: boolean;\n  isFirst: boolean;\n  volume: number;\n  volumeLog: number;\n  isMuted: boolean;\n  opts: YouTubeProps['opts'];\n}\n\nexport class YoutubeWrap extends React.Component<YoutubeWrapProps, YoutubeWrapState> {\n  constructor(props: YoutubeWrapProps) {\n    super(props);\n    this.state = {\n      youtubeDisp: undefined, // youtube target\n      videoId: '',\n      videoStatus: -1, // YouTubeコンポーネントのステータスが変更された時に変更される\n      getAction: false,\n      isFirst: true, // 参加時かどうかのフラグ\n      volume: 0, // ボリューム\n      volumeLog: 0, // 変更前のボリューム\n      isMuted: true, // ミュートフラグ\n      opts: this.defaultOpts(this.isSmartPhone()) // YouTubePlayerのオプション\n    };\n\n    this.mute = this.mute.bind(this);\n    this.unMute = this.unMute.bind(this);\n    this.changeVolume = this.changeVolume.bind(this);\n  }\n\n  socket = this.props.socket;\n\n  defaultOpts = (isSmartPhone: boolean): YouTubeProps['opts'] => ({\n    width: '100%',\n    height: '700px',\n    playerVars: {\n      controls: isSmartPhone ? 0 : 1,\n      rel: 0,\n      playsinline: 1,\n      fs: 0,\n      disablekb: 1,\n      modestbranding: 1\n    }\n  });\n\n  componentDidUpdate(): void {\n    if (this.state.youtubeDisp) {\n      this.setUpSocketListenner();\n    }\n  }\n\n  componentWillUnmount(): void {\n    Cookie.set('streaming_volume', String(this.state.volume));\n  }\n\n  /** socket client Listennerを設定 */\n  setUpSocketListenner = (): void => {\n    const listenners = [\n      'youtube_add_movie',\n      'youtube_pause',\n      'youtube_play',\n      'youtube_seek',\n      'request_playing_data',\n      'new_playing_data'\n    ];\n    for (const listenner of listenners) {\n      this.socket.off(listenner);\n    }\n\n    this.socket.on('youtube_add_movie', (movie_id: string) => {\n      if (!this.state.youtubeDisp) return;\n      console.log('movieId', movie_id);\n      this.setState({ videoId: movie_id });\n      this.state.youtubeDisp.cueVideoById(movie_id);\n      this.setUpBuffer(this.state.youtubeDisp).then(() => {\n        this.state.youtubeDisp?.playVideo();\n      });\n    });\n\n    this.socket.on('youtube_pause', (time: number) => {\n      if (!this.state.youtubeDisp) return;\n      console.log('listen!pause!', time);\n      this.setState({ getAction: true }, () => {\n        this.state.youtubeDisp?.pauseVideo();\n        this.state.youtubeDisp?.seekTo(time, true);\n      });\n    });\n\n    this.socket.on('youtube_play', (time: number) => {\n      if (!this.state.youtubeDisp) return;\n      console.log('listen!play!', time);\n      this.setState({ getAction: true }, () => {\n        this.state.youtubeDisp?.playVideo();\n      });\n    });\n\n    this.socket.on('youtube_seek', (time: number) => {\n      if (!this.state.youtubeDisp) return;\n      this.state.youtubeDisp.seekTo(time, true);\n    });\n\n    this.socket.on('request_playing_data', async (participant_id: string) => {\n      if (!this.state.youtubeDisp) return;\n      const status = this.state.youtubeDisp.getPlayerState();\n      const time = this.state.youtubeDisp.getCurrentTime();\n      const playingData: { movie_id?: string; time: number; isPlaying: boolean } = {\n        time: time || 0.0,\n        isPlaying: status ? this.statusCheck(status) : false\n      };\n      // console.log('プレイングデータをemitします', playingData);\n      if (this.state.videoId) {\n        playingData.movie_id = this.state.videoId;\n      }\n      const payload = {\n        socket_id: participant_id,\n        playingData: playingData\n      };\n      this.socket.emit('send_playing_data', payload);\n    });\n\n    this.socket.on('new_playing_data', (res: { movie_id?: string; time: number; isPlaying: boolean }) => {\n      if (!this.state.youtubeDisp) return;\n      console.log('newplayingData', res);\n      if (res.movie_id) {\n        this.state.youtubeDisp.cueVideoById(res.movie_id);\n        this.setState({ videoId: res.movie_id });\n      }\n      this.setUpBuffer(this.state.youtubeDisp).then(() => {\n        if (res.isPlaying) {\n          this.state.youtubeDisp?.seekTo(res.time + 1.5, true);\n          this.state.youtubeDisp?.playVideo();\n        } else {\n          this.state.youtubeDisp?.seekTo(res.time, true);\n        }\n        window.setTimeout(() => {\n          this.setState({ isFirst: false });\n        }, 500);\n      });\n    });\n  };\n\n  /** ステータスナンバーから再生中か停止中かを返す */\n  statusCheck = (value: number): boolean => {\n    // https://developers.google.com/youtube/iframe_api_reference?hl=ja#Adding_event_listener 参照\n    let isPlaying = false;\n    switch (value) {\n      case -1: // 未開始\n        isPlaying = false;\n        break;\n      case 0: // 終了\n        isPlaying = false;\n        break;\n      case 1: // 再生中\n        isPlaying = true;\n        break;\n      case 2: // 停止\n        isPlaying = false;\n        break;\n      case 3: // バッファリング中\n        isPlaying = false;\n        break;\n      case 5: // 頭出し済み\n        isPlaying = false;\n        break;\n    }\n    return isPlaying;\n  };\n\n  /** スマートフォンからのアクセスかどうかの判定 */\n  isSmartPhone = (): boolean => {\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  /** react-youtubeコンポーネントの設定 */\n  player: YouTubeProps = {\n    onPlay: ({ target, data }: { target: YouTubePlayer; data: number }) => {\n      if (this.state.isFirst) return;\n      if (this.state.getAction) {\n        this.setState({ getAction: false });\n        return;\n      }\n      this.socket.emit('youtube_play', target.getCurrentTime());\n    },\n    onPause: ({ target, data }: { target: YouTubePlayer; data: number }) => {\n      if (this.state.isFirst) return;\n      if (this.state.getAction) {\n        this.setState({ getAction: false });\n        return;\n      }\n      this.socket.emit('youtube_pause', target.getCurrentTime());\n    },\n    onReady: (event: { target: YouTubePlayer }) => {\n      const { target } = event;\n      this.setState({ youtubeDisp: target });\n      // ボリューム情報のセット\n      const agent = navigator.userAgent.toLowerCase();\n\n      // スマホかどうか\n      if (this.isSmartPhone()) {\n        // スマホの場合\n        this.mute();\n\n        if (this.props.room.isOwner) {\n          target.cueVideoById('b6-2P8RgT0A');\n          this.setState({ videoId: 'b6-2P8RgT0A' }, () => {\n            this.setUpBuffer(target).then(() => {\n              console.log('Buffer完了');\n              this.setState({ isFirst: false });\n            });\n          });\n        } else {\n          this.socket.emit('youtube_sync');\n        }\n      } else {\n        // それ以外の場合\n        let defaultVolume = 0;\n\n        // デフォルトボリュームの取得\n        if (agent.match('chrome') && !agent.match('edg')) {\n          defaultVolume = target.getVolume();\n        } else {\n          const cookieVolume = Cookie.get('streaming_volume');\n          if (cookieVolume) {\n            defaultVolume = Number(cookieVolume);\n          } else {\n            defaultVolume = 20;\n          }\n        }\n\n        /**  コントローラのが表示されているかどうか */\n        let prev_flag: number | undefined = 0;\n\n        this.setState(\n          (prev) => {\n            // コントローラ表示時のみボリュームログに保存\n            prev_flag = prev.opts?.playerVars?.controls;\n\n            if (prev.opts?.playerVars?.controls === 1) {\n              return { ...prev, volumeLog: defaultVolume };\n            } else {\n              return { ...prev };\n            }\n          },\n          () => {\n            // コントローラを非表示にする\n            this.setState(\n              (prev) => ({\n                opts: {\n                  ...prev.opts,\n                  playerVars: {\n                    ...prev.opts?.playerVars,\n                    controls: 0\n                  }\n                }\n              }),\n              () => {\n                target.setVolume(0);\n                if (this.props.room.isOwner) {\n                  if (prev_flag === 0) {\n                    target.cueVideoById('b6-2P8RgT0A');\n                    this.setState({ videoId: 'b6-2P8RgT0A' }, () => {\n                      this.setUpBuffer(target).then(() => {\n                        console.log('Buffer完了');\n                        this.setState({ isFirst: false });\n                      });\n                    });\n                  }\n                } else {\n                  this.socket.emit('youtube_sync');\n                }\n              }\n            );\n          }\n        );\n      }\n    },\n    onStateChange: ({ target, data }: { target: YouTubePlayer; data: number }) => {\n      // console.log('onStateChange', data);\n      this.setState({ videoStatus: data });\n    }\n    // https://developers.google.com/youtube/player_parameters?hl=ja ここ参照してる\n  };\n\n  /** ミュート状態で1秒間再生し、元に戻して一時停止する初期バッファーを読み込むための関数です */\n  setUpBuffer = (target: YouTubePlayer): Promise<boolean> => {\n    return new Promise((resolve) => {\n      this.mute();\n      target.playVideo();\n      window.setTimeout(() => {\n        target.pauseVideo();\n        target.seekTo(0, true);\n        if (!this.isSmartPhone()) {\n          this.unMute();\n        }\n        resolve(true);\n      }, 1000);\n    });\n  };\n\n  /** ボリュームを変更する */\n  changeVolume = (value: number): void => {\n    this.state.youtubeDisp?.setVolume(value);\n    this.setState({ volume: value });\n  };\n\n  /** ボリュームログを変更する */\n  setVolumeLog = (value: number): void => {\n    if (value > 5 && value <= 100) {\n      this.setState({ volumeLog: value });\n    }\n  };\n\n  /** ミュート時の処理 */\n  mute = (): void => {\n    this.setState({ isMuted: true }, () => {\n      this.setState((prev) => {\n        if (prev.volume > 5) {\n          return { volumeLog: this.state.volume };\n        } else {\n          return { ...prev };\n        }\n      });\n      this.changeVolume(0);\n      this.state.youtubeDisp?.mute();\n    });\n  };\n\n  /** アンミュート時の処理 */\n  unMute = (): void => {\n    this.setState({ isMuted: false });\n    this.state.youtubeDisp?.unMute();\n    this.state.volumeLog > 1 ? this.changeVolume(this.state.volumeLog) : this.changeVolume(30);\n  };\n\n  render(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Presenter\n          player={this.player}\n          opts={this.state.opts}\n          videoId={this.state.videoId}\n          controller={{\n            socket: this.socket,\n            youtubeDisp: this.state.youtubeDisp,\n            videoStatus: this.state.videoStatus,\n            volume: this.state.volume,\n            isMuted: this.state.isMuted,\n            mute: this.mute,\n            unMute: this.unMute,\n            changeVolume: this.changeVolume,\n            setVolumeLog: this.setVolumeLog\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Grid, TextField } from '@material-ui/core';\n\ninterface PresenterProps {\n  videoId: string;\n  onChange: (value: string) => void;\n  addMovieHandler: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  return (\n    <form style={{ width: '100%' }} onSubmit={props.addMovieHandler}>\n      <Grid container spacing={1}>\n        <Grid item xs={12} lg={11} xl={11}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"YouTube Movie URL\"\n            color=\"secondary\"\n            style={{ borderRadius: 'none', background: '#f9f9f9', height: '100%' }}\n            value={props.videoId}\n            onChange={(e) => props.onChange(e.target.value)}\n          ></TextField>\n        </Grid>\n        <Grid item xs={12} lg={1} xl={1}>\n          <Button\n            fullWidth\n            type=\"submit\"\n            color=\"secondary\"\n            variant=\"contained\"\n            style={{ height: '100%' }}\n            disableElevation\n          >\n            変更\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport { Presenter } from './Presenter';\n\ninterface AddFormProps {\n  socket: SocketIOClient.Socket;\n}\n\nexport const AddForm: React.FC<AddFormProps> = (props: AddFormProps) => {\n  const socket = props.socket;\n  const [videoId, setVideoId] = React.useState('');\n\n  const onChange = (value: string) => {\n    setVideoId(value);\n  };\n\n  const addMovieHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    socket.emit('youtube_add_movie', videoId);\n    setVideoId('');\n  };\n\n  return <Presenter {...{ videoId, onChange, addMovieHandler }} />;\n};\n","import * as React from 'react';\nimport { Box, Grid, Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { YoutubeWrap } from '../../components/YoutubeWrap';\nimport './main.css';\nimport { CreateForm, CreateFormProps, InputSub } from '../../components/CreateForm';\nimport { AddForm } from '../../components/AddForm';\nimport { RoomState } from '../../store/modules/roomModule';\n\ninterface PresenterProps {\n  socket: SocketIOClient.Socket | null;\n  room: RoomState;\n  nameDialog: boolean;\n  createForm: {\n    inputs: InputSub[];\n    load: boolean;\n    onSubmit: () => void;\n  };\n}\n\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\n  return (\n    <React.Fragment>\n      {props.room.roomId && props.socket ? (\n        <Grid container justify=\"center\" className=\"RoomContainer\">\n          <Grid item xs={11} lg={9} xl={9}>\n            <Box>\n              <YoutubeWrap socket={props.socket} room={props.room} />\n            </Box>\n          </Grid>\n          <Grid item xs={11} lg={9} xl={9}>\n            <Box boxSizing=\"border-box\" padding=\"10px 11px\" borderRadius=\"2px\" style={{ background: '#fff' }}>\n              <AddForm socket={props.socket} />\n            </Box>\n          </Grid>\n        </Grid>\n      ) : (\n        false\n      )}\n      {props.room.roomId ? (\n        false\n      ) : (\n        <div className=\"base\">\n          <div className=\"wave\"></div>\n        </div>\n      )}\n      <Dialog open={props.nameDialog}>\n        <CreateForm width=\"100%\" head=\"ユーザーネーム\" btn=\"入室\" {...props.createForm} />\n      </Dialog>\n    </React.Fragment>\n  );\n};\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { VariantType, useSnackbar } from 'notistack';\nimport roomModule from '../../store/modules/roomModule';\nimport { State } from '../../store/store';\nimport { Presenter } from './Presenter';\nimport { PageProps } from '../../App';\nimport { InputSub } from '../../components/CreateForm';\nimport Cookie from 'js-cookie';\n\nconst Room: React.FC<PageProps> = (props: PageProps) => {\n  const [socket, setSocket] = React.useState<SocketIOClient.Socket | null>(null);\n  const [nameDialog, setNameDialog] = React.useState<boolean>(false);\n  const [enterId, setEnterId] = React.useState<string>('');\n  const [load, setLoad] = React.useState<boolean>(false);\n  const room = useSelector((state: State) => state.room);\n  const history = useHistory();\n  const dispach = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    props.getSocket().then((rec_socket) => {\n      setSocket(rec_socket);\n      // 後でここにルーム存在確認処理を追加\n      // ルーム作成ではない場合\n      if (!room.roomId) {\n        // パラメータからroom_idを取得\n        const roomId = getParamValue('room_id');\n        if (roomId) {\n          rec_socket.emit('check_room', roomId, (res: boolean) => {\n            if (res) {\n              // Cookie存在時ユーザネームセット処理\n              const cookieName = Cookie.get('streaming_name');\n              if (cookieName) {\n                setUserName({ value: cookieName, error: false, msg: '' });\n              }\n              // ルーム入室処理\n              setEnterId(roomId);\n              setNameDialog(true);\n            } else {\n              sendNotifiction('ルームが存在しませんでした', 'error', { horizontal: 'center', vertical: 'top' });\n              history.push('/');\n            }\n          });\n        }\n      }\n    });\n    return () => {\n      props.clearSocket();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!socket) return;\n    socket.on('user_joined', (res: { user: { id: string; name: string } }) => {\n      sendNotifiction(res.user.name + 'が入室しました', 'success');\n    });\n    socket.on('user_left', (res: { user: { id: string; name: string } }) => {\n      sendNotifiction(res.user.name + 'が退出しました', 'error');\n    });\n  }, [socket]);\n\n  const joinRoom = (socket: SocketIOClient.Socket, option: { roomId: string }) => {\n    if (!socket) return sendNotifiction('入室に失敗しました', 'error', { horizontal: 'center', vertical: 'top' });\n    socket.emit('join_room', { room_id: option.roomId, user_name: userName.value }, (res: boolean) => {\n      if (res) {\n        dispach(roomModule.actions.setRoom({ roomId: option.roomId, userName: userName.value, isOwner: false }));\n        setNameDialog(false);\n      } else {\n        sendNotifiction('入室に失敗しました', 'error', { horizontal: 'center', vertical: 'top' });\n        history.push('/');\n      }\n      setLoad(false);\n    });\n  };\n\n  const getParamValue = (key: string): string | null => {\n    const params = new URLSearchParams(window.location.search);\n    const value = params.get(key);\n    return value;\n  };\n\n  const sendNotifiction = (\n    message: string,\n    variant: VariantType,\n    position: { horizontal: 'left' | 'center' | 'right'; vertical: 'top' | 'bottom' } = {\n      horizontal: 'left',\n      vertical: 'bottom'\n    }\n  ) => {\n    if (screen.width < 600) return;\n    enqueueSnackbar(message, {\n      variant,\n      anchorOrigin: { horizontal: position.horizontal, vertical: position.vertical },\n      autoHideDuration: 2000\n    });\n  };\n\n  // ユーザネーム入力に参照するstate\n  const [userName, setUserName] = React.useState({\n    value: 'Guest',\n    error: false,\n    msg: ''\n  });\n\n  const inputs: InputSub[] = [\n    {\n      label: '',\n      placeholder: '須鳥武 太郎',\n      value: userName.value,\n      error: userName.error,\n      msg: userName.msg,\n      onChange: function (value: string) {\n        const { error, msg } = this.validate(value);\n        setUserName({ value, error, msg });\n      },\n      validate: (val: string) => {\n        const response = { error: false, msg: '' };\n        if (val === '') {\n          response.error = true;\n          response.msg = 'ユーザネームを入力してください';\n        } else if (val.length > 13) {\n          response.error = true;\n          response.msg = '12文字以内で入力してください';\n        }\n        return response;\n      }\n    }\n  ];\n\n  const enterSubmitHandler = () => {\n    if (!socket) return;\n    setLoad(true);\n    console.log('enterSubmitHandler', socket, enterId);\n    Cookie.set('streaming_name', userName.value);\n    joinRoom(socket, { roomId: enterId });\n  };\n\n  return (\n    <Presenter\n      socket={socket}\n      room={room}\n      nameDialog={nameDialog}\n      createForm={{ inputs, load, onSubmit: enterSubmitHandler }}\n    />\n  );\n};\n\nexport default Room;\n"],"sourceRoot":""}