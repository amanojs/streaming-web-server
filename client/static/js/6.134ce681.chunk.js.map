{"version":3,"sources":["components/InputText/index.tsx","components/CreateForm/Presenter.tsx","components/CreateForm/index.tsx","components/Volume/Presenter.tsx","components/Volume/index.tsx","components/YoutubeController/Presenter.tsx","components/YoutubeController/index.tsx","components/PlayingBoard/Presenter.tsx","components/PlayingBoard/index.tsx","components/YoutubeWrap/Presenter.tsx","components/YoutubeWrap/index.tsx","components/AddForm/Presenter.tsx","components/AddForm/index.tsx","pages/Room/Presenter.tsx","pages/Room/index.tsx"],"names":["InputText","props","style","color","padding","fontSize","fontWeight","fontFamily","label","TextField","fullWidth","error","helperText","msg","variant","value","onChange","e","target","placeholder","Presenter","classes","makeStyles","form_card","width","useStyles","Card","className","onSubmit","submitEvent","Grid","container","justify","spacing","item","xs","Box","display","justifyContent","alignItems","lineHeight","marginBottom","head","inputs","map","input","Button","type","disabled","load","disableElevation","CircularProgress","size","btn","CreateForm","bind","validateAll","errorFlag","validate","a","preventDefault","defaultProps","IconButton","onClick","isMute","VolumeOff","VolumeUp","Hidden","xsDown","isSmartPhone","VolumeSlider","valueLabelDisplay","step","min","max","volume","marginLeft","withStyles","root","paddingTop","thumb","height","backgroundColor","border","boxShadow","active","valueLabel","left","paddingRight","background","textShadow","track","borderRadius","rail","Slider","Volume","navigator","userAgent","match","PrettoSlider","marginTop","defaultValue","timed","duratioin","sliderOnChange","getAriaValueText","valueLabelFormat","sm","md","lg","xl","wrap","volumeSliderOnChange","volumeOnClick","fastTimed","FastRewind","playOrPause","statusIcon","PlayArrow","Pause","FastForward","YoutubeController","React","setTimed","duration","setDuration","setStatusIcon","checkTimer","youtubeDisp","getDuration","setInterval","currentTime","getCurrentTime","clearInterval","statusCheck","videoStatus","status","changedtime","socket","emit","seekTo","Number","targetTime","pauseVideo","window","setTimeout","playVideo","floorValue","Math","floor","timeH","timeM","timeS","String","padStart","isMuted","unMute","mute","num","setVolumeLog","changeVolume","unMuteForVolumeBar","id","xmlns","viewBox","d","title","PlayingBoard","videoId","getTitle","player","opts","controller","YoutubeWrap","defaultOpts","playerVars","controls","rel","playsinline","fs","disablekb","modestbranding","setUpSocketListenner","listenner","off","on","movie_id","state","setState","cueVideoById","setUpBuffer","then","time","getAction","participant_id","getPlayerState","playingData","isPlaying","payload","socket_id","this","res","isFirst","onPlay","data","onPause","onReady","event","agent","toLowerCase","room","isOwner","defaultVolume","getVolume","cookieVolume","Cookie","get","prev_flag","prev","volumeLog","setVolume","onStateChange","Promise","resolve","undefined","set","addMovieHandler","AddForm","setVideoId","roomId","boxSizing","Dialog","open","nameDialog","createForm","Room","setSocket","setNameDialog","enterId","setEnterId","setLoad","useSelector","history","useHistory","dispach","useDispatch","enqueueSnackbar","useSnackbar","getSocket","rec_socket","getParamValue","cookieName","setUserName","sendNotifiction","horizontal","vertical","push","clearSocket","user","name","key","URLSearchParams","location","search","message","position","screen","anchorOrigin","autoHideDuration","userName","val","response","length","option","room_id","user_name","roomModule","actions","setRoom","joinRoom"],"mappings":"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","file":"static/js/6.134ce681.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport interface InputTextProps {\r\n  /** ラベル */\r\n  label: string;\r\n  /**プレースホルダ */\r\n  placeholder?: string;\r\n  /** インプットテキストの値 */\r\n  value: string;\r\n  /** エラー状態 */\r\n  error: boolean;\r\n  /** エラー時に表示するメッセージ */\r\n  msg: string;\r\n  /** インプットテキストの値が変更されるたびに実行される処理 */\r\n  onChange: (value: string) => void;\r\n}\r\n\r\n/** ラベル付きのインプットテキスト */\r\nexport const InputText: React.FC<InputTextProps> = (props: InputTextProps) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          color: '#606060',\r\n          padding: '0 0 3px 0',\r\n          fontSize: '13px',\r\n          fontWeight: 'bold',\r\n          fontFamily: 'Noto Sans JP'\r\n        }}\r\n      >\r\n        {props.label}\r\n      </div>\r\n      <TextField\r\n        fullWidth\r\n        error={props.error}\r\n        helperText={props.msg}\r\n        variant=\"outlined\"\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        color=\"secondary\"\r\n        placeholder={props.placeholder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card, Button, Box, CircularProgress } from '@material-ui/core';\r\nimport { InputText } from '../InputText';\r\nimport { InputSub } from './index';\r\nimport './main.css';\r\n\r\nexport interface PresenterProps {\r\n  width: string;\r\n  head: string;\r\n  btn: string;\r\n  inputs: InputSub[];\r\n  load: boolean;\r\n  submitEvent: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  const useStyles = makeStyles({\r\n    form_card: {\r\n      width: props.width,\r\n      padding: '55px 0'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.form_card}>\r\n      <form style={{ width: '100%' }} onSubmit={props.submitEvent}>\r\n        <Grid container justify=\"center\" spacing={1}>\r\n          <Grid item xs={10}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Box\r\n                  className=\"create_room_head\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  lineHeight=\"0px\"\r\n                  marginBottom=\"30px\"\r\n                >\r\n                  <span>{props.head}</span>\r\n                </Box>\r\n              </Grid>\r\n\r\n              {props.inputs.map((input: InputSub) => {\r\n                return (\r\n                  <Grid item xs={12} key={input.label}>\r\n                    <InputText\r\n                      label={input.label}\r\n                      error={input.error}\r\n                      msg={input.msg}\r\n                      placeholder={input.placeholder}\r\n                      value={input.value}\r\n                      onChange={input.onChange}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  disabled={props.load}\r\n                  disableElevation\r\n                  color=\"secondary\"\r\n                >\r\n                  {props.load ? <CircularProgress size={24} style={{ color: '#fff' }} /> : props.btn}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Presenter } from './Presenter';\r\nimport { InputTextProps } from '../InputText';\r\n\r\nexport interface InputSub extends InputTextProps {\r\n  validate: (val: string) => { error: boolean; msg: string };\r\n}\r\n\r\nexport interface CreateFormProps {\r\n  /** 横幅 px や % で指定 */\r\n  width: string;\r\n  /** フォームタイトル*/\r\n  head: string;\r\n  /** フォームのサブミットボタンのタイトル */\r\n  btn: string;\r\n  /** ロード中か */\r\n  load: boolean;\r\n  /** InputText型にバリデーション処理を加えたインプットの配列 */\r\n  inputs: InputSub[];\r\n  /** サブミット処理(オールバリデーション処理の後に実行されます) */\r\n  onSubmit: () => any;\r\n}\r\n\r\n/** タイトルとインプットテキストとサブミットボタンのシンプルなフォーム */\r\nexport const CreateForm: React.FC<CreateFormProps> = (props: CreateFormProps) => {\r\n  for (const input of props.inputs) {\r\n    input.onChange = input.onChange.bind(input);\r\n  }\r\n\r\n  const validateAll = () => {\r\n    let errorFlag = false;\r\n    for (const input of props.inputs) {\r\n      input.onChange(input.value);\r\n      const { error } = input.validate(input.value);\r\n      if (error) errorFlag = true;\r\n    }\r\n    return errorFlag;\r\n  };\r\n\r\n  const submitEvent = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (validateAll()) {\r\n      return;\r\n    }\r\n    await props.onSubmit();\r\n  };\r\n\r\n  return (\r\n    <Presenter\r\n      width={props.width}\r\n      head={props.head}\r\n      btn={props.btn}\r\n      inputs={props.inputs}\r\n      load={props.load}\r\n      submitEvent={submitEvent}\r\n    />\r\n  );\r\n};\r\nCreateForm.defaultProps = {\r\n  width: '100%'\r\n};\r\n","import * as React from 'react';\r\nimport { Slider, IconButton, withStyles, Hidden } from '@material-ui/core';\r\nimport { VolumeOff, VolumeUp } from '@material-ui/icons';\r\n\r\ninterface PresenterProps {\r\n  isMute: boolean;\r\n  volume: number;\r\n  onChange: (e: React.ChangeEvent<any>, value: number | number[]) => void;\r\n  onClick: () => void;\r\n  isSmartPhone: () => boolean;\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <IconButton size=\"small\" color=\"secondary\" onClick={props.onClick}>\r\n        {props.isMute ? <VolumeOff></VolumeOff> : <VolumeUp></VolumeUp>}\r\n      </IconButton>\r\n      <Hidden xsDown>\r\n        {!props.isSmartPhone() && (\r\n          <VolumeSlider\r\n            valueLabelDisplay=\"off\"\r\n            step={0.001}\r\n            min={0.0}\r\n            max={100.0}\r\n            value={props.volume}\r\n            onChange={props.onChange}\r\n            style={{\r\n              width: '100%',\r\n              marginLeft: '12px'\r\n            }}\r\n          ></VolumeSlider>\r\n        )}\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VolumeSlider = withStyles({\r\n  root: {\r\n    color: '#1dd1a1',\r\n    paddingTop: 0,\r\n    marginBottom: 0,\r\n    padding: 0\r\n  },\r\n  thumb: {\r\n    height: 14,\r\n    width: 14,\r\n    backgroundColor: 'currentColor',\r\n    border: '2px solid currentColor',\r\n    '&:hover': {\r\n      height: 14,\r\n      width: 14,\r\n      backgroundColor: 'currentColor',\r\n      boxShadow: 'none'\r\n    },\r\n    '&:focus': {\r\n      boxShadow: 'none'\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-80%)',\r\n    '& *': {\r\n      paddingRight: 5,\r\n      background: 'transparent',\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n      textShadow: '2px 2px 4px #222'\r\n    }\r\n  },\r\n  track: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  }\r\n})(Slider);\r\n","import * as React from 'react';\r\nimport { Presenter } from './Presenter';\r\n\r\nexport interface VolumeProps {\r\n  isMute: boolean;\r\n  volume: number;\r\n  onChange: (e: React.ChangeEvent<any>, value: number | number[]) => void;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Volume: React.FC<VolumeProps> = (props: VolumeProps) => {\r\n  /** スマートフォンからのアクセスかどうかの判定 */\r\n  const isSmartPhone = (): boolean => {\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  return (\r\n    <Presenter\r\n      onClick={props.onClick}\r\n      onChange={props.onChange}\r\n      isMute={props.isMute}\r\n      volume={props.volume}\r\n      isSmartPhone={isSmartPhone}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { YouTubePlayer } from 'youtube-player/dist/types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Slider, IconButton, Hidden } from '@material-ui/core';\r\nimport { PlayArrow, Pause, FastForward, FastRewind } from '@material-ui/icons';\r\nimport { Volume } from '../Volume';\r\n\r\nexport interface PresenterProps {\r\n  statusIcon: 'play' | 'pause';\r\n  timed: number;\r\n  duratioin: number;\r\n  sliderOnChange: (e: any, value: any) => void;\r\n  fastTimed: (value: number) => void;\r\n  valueLabelFormat: (value: number) => string;\r\n  playOrPause: () => void;\r\n  isMute: boolean;\r\n  volumeOnClick: () => any;\r\n  volumeSliderOnChange: (e: React.ChangeEvent<any>, value: number | number[]) => any;\r\n  volume: number;\r\n}\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#1dd1a1',\r\n    paddingTop: 0\r\n  },\r\n  thumb: {\r\n    height: 10,\r\n    width: 10,\r\n    backgroundColor: 'currentColor',\r\n    marginTop: -1,\r\n    marginLeft: -1,\r\n    border: '2px solid currentColor',\r\n    '&:hover': {\r\n      boxShadow: '2px 2px 8px currentColor',\r\n      height: 16,\r\n      width: 16,\r\n      marginTop: -6,\r\n      marginLeft: -10,\r\n      backgroundColor: 'currentColor'\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '2px 2px 8px currentColor'\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-80%)',\r\n    '& *': {\r\n      paddingRight: 5,\r\n      background: 'transparent',\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n      textShadow: '2px 2px 4px #222'\r\n    }\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 0\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 0\r\n  }\r\n})(Slider);\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container style={{ background: '#fff', marginTop: '-11px' }}>\r\n        <Grid item xs={12}>\r\n          <PrettoSlider\r\n            style={{ height: 'auto' }}\r\n            valueLabelDisplay=\"auto\"\r\n            defaultValue={0.0}\r\n            value={props.timed}\r\n            min={0.0}\r\n            max={props.duratioin}\r\n            step={0.000000001}\r\n            onChange={props.sliderOnChange}\r\n            getAriaValueText={props.valueLabelFormat}\r\n            valueLabelFormat={props.valueLabelFormat}\r\n          />\r\n        </Grid>\r\n        <Grid container alignItems=\"center\" style={{ padding: '0 20px 10px 20px' }}>\r\n          <Grid item xs={1} sm={3} md={3} lg={3} xl={3} style={{ color: '#777' }}>\r\n            <Grid container alignItems=\"center\" wrap=\"wrap\">\r\n              <Hidden xsDown>\r\n                <Grid item sm={12} md={12} lg={5} xl={3} style={{ fontFamily: 'Noto Sans JP', fontSize: '14px' }}>\r\n                  <span>{props.valueLabelFormat(props.timed)}</span>/\r\n                  <span>{props.valueLabelFormat(props.duratioin)}</span>\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item sm={12} md={12} lg={7} xl={5}>\r\n                <Volume\r\n                  isMute={props.isMute}\r\n                  onChange={props.volumeSliderOnChange}\r\n                  onClick={props.volumeOnClick}\r\n                  volume={props.volume}\r\n                ></Volume>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={10} sm={6} md={6} lg={6} xl={6}>\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n              <Grid item>\r\n                <IconButton size=\"medium\" onClick={() => props.fastTimed(-15)}>\r\n                  <FastRewind fontSize=\"small\" color=\"secondary\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton onClick={props.playOrPause}>\r\n                  {props.statusIcon === 'play' ? (\r\n                    <PlayArrow fontSize=\"large\" color=\"secondary\" />\r\n                  ) : (\r\n                    <Pause fontSize=\"large\" color=\"secondary\" />\r\n                  )}\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton size=\"medium\" onClick={() => props.fastTimed(15)}>\r\n                  <FastForward fontSize=\"small\" color=\"secondary\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={1} sm={3} md={3} lg={3} xl={3}></Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Presenter } from './Presenter';\r\nimport { YouTubePlayer } from 'youtube-player/dist/types';\r\n//import { PresenterProps } from './Presenter';\r\n\r\nexport interface YoutubeControllerProps {\r\n  socket: SocketIOClient.Socket;\r\n  youtubeDisp: YouTubePlayer | undefined;\r\n  videoStatus: number;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  mute: () => void;\r\n  unMute: () => void;\r\n  unMuteForVolumeBar: () => void;\r\n  changeVolume: (num: number) => void;\r\n  setVolumeLog: (num: number) => void;\r\n}\r\n\r\nexport const YoutubeController: React.FC<YoutubeControllerProps> = (props: YoutubeControllerProps) => {\r\n  const [timed, setTimed] = React.useState<number>(0);\r\n  const [duration, setDuration] = React.useState<number>(0);\r\n  const [statusIcon, setStatusIcon] = React.useState<'play' | 'pause'>('pause');\r\n\r\n  let checkTimer: NodeJS.Timeout | null = null;\r\n\r\n  React.useEffect(() => {\r\n    if (props.youtubeDisp) {\r\n      setDuration(props.youtubeDisp.getDuration());\r\n\r\n      checkTimer = setInterval(\r\n        (props) => {\r\n          const currentTime = props.youtubeDisp.getCurrentTime();\r\n          setTimed(currentTime);\r\n        },\r\n        150,\r\n        props\r\n      );\r\n    }\r\n    return () => {\r\n      if (checkTimer) {\r\n        clearInterval(checkTimer);\r\n      }\r\n    };\r\n  }, [props.youtubeDisp]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.youtubeDisp) {\r\n      const duration = props.youtubeDisp.getDuration();\r\n      setDuration(duration);\r\n    }\r\n    statusCheck(props.videoStatus);\r\n  }, [props.videoStatus]);\r\n\r\n  /** 再生バー処理 */\r\n  const sliderOnChange = (changedtime: MouseEvent, value: number | number[]) => {\r\n    if (props.youtubeDisp) {\r\n      props.socket.emit('youtube_seek', value);\r\n      props.youtubeDisp.seekTo(Number(value), true);\r\n      setTimed(Number(value));\r\n    }\r\n  };\r\n\r\n  /** 引数の秒数分動画をスキップする */\r\n  const fastTimed = (value: number) => {\r\n    if (props.youtubeDisp) {\r\n      let targetTime = timed + value;\r\n      if (duration <= targetTime) {\r\n        targetTime = duration - 0.2;\r\n        setTimed(targetTime);\r\n        props.youtubeDisp.pauseVideo();\r\n        window.setTimeout(() => {\r\n          props.youtubeDisp?.playVideo();\r\n        }, 200);\r\n      }\r\n      props.youtubeDisp.seekTo(targetTime, true);\r\n      props.socket.emit('youtube_seek', targetTime);\r\n    }\r\n  };\r\n\r\n  /** 少数で渡された秒数を hh:mm:ss のフォーマットで返す */\r\n  const valueLabelFormat = (value: number): string => {\r\n    if (!value) {\r\n      return '00:00';\r\n    }\r\n    const floorValue = Math.floor(value);\r\n    const timeH = Math.floor((floorValue % (24 * 60 * 60)) / (60 * 60));\r\n    const timeM = Math.floor(((floorValue % (24 * 60 * 60)) % (60 * 60)) / 60);\r\n    const timeS = ((floorValue % (24 * 60 * 60)) % (60 * 60)) % 60;\r\n    if (timeH === 0) {\r\n      return String(timeM).padStart(2, '0') + ':' + String(timeS).padStart(2, '0');\r\n    } else {\r\n      return (\r\n        String(timeH).padStart(2, '0') + ':' + String(timeM).padStart(2, '0') + ':' + String(timeS).padStart(2, '0')\r\n      );\r\n    }\r\n  };\r\n\r\n  /** 動画再生状況をセット */\r\n  const statusCheck = (status: number) => {\r\n    // https://developers.google.com/youtube/iframe_api_reference?hl=ja#Adding_event_listener 参照\r\n    switch (status) {\r\n      case -1: // 未開始\r\n        setStatusIcon('play');\r\n        break;\r\n      case 0: // 終了\r\n        setStatusIcon('play');\r\n        break;\r\n      case 1: // 再生中\r\n        setStatusIcon('pause');\r\n        break;\r\n      case 2: // 停止\r\n        setStatusIcon('play');\r\n        break;\r\n      case 3: // バッファリング中\r\n        setStatusIcon('play');\r\n        break;\r\n      case 5: // 頭出し済み\r\n        setStatusIcon('play');\r\n        break;\r\n    }\r\n  };\r\n\r\n  /** 再生、停止ボタンクリック処理 */\r\n  const playOrPause = () => {\r\n    if (statusIcon === 'play') {\r\n      props.youtubeDisp?.playVideo();\r\n    } else {\r\n      props.youtubeDisp?.pauseVideo();\r\n    }\r\n  };\r\n\r\n  /** ミュート状態の切り替え */\r\n  const volumeOnClick = () => {\r\n    props.isMuted ? props.unMute() : props.mute();\r\n  };\r\n\r\n  /** ボリューム変更処理 */\r\n  const volumeSliderOnChange = (e: React.ChangeEvent, value: number | number[]) => {\r\n    const num = Number(value);\r\n\r\n    switch (e.type) {\r\n      case 'mousemove':\r\n        break;\r\n      case 'mousedown':\r\n        // クリック時の処理\r\n        if (num > 5) {\r\n          props.setVolumeLog(num);\r\n        }\r\n        break;\r\n      default:\r\n      // デフォルト処理\r\n    }\r\n\r\n    // ボリュームを変更\r\n    props.changeVolume(num);\r\n    // ボリュームの値を参照しミュート状態を切り替え\r\n    num < 1 ? props.mute() : props.isMuted ? props.unMuteForVolumeBar() : false;\r\n  };\r\n\r\n  return (\r\n    <Presenter\r\n      statusIcon={statusIcon}\r\n      timed={timed}\r\n      sliderOnChange={sliderOnChange}\r\n      fastTimed={fastTimed}\r\n      duratioin={duration}\r\n      valueLabelFormat={valueLabelFormat}\r\n      playOrPause={playOrPause}\r\n      volume={props.volume}\r\n      volumeOnClick={volumeOnClick}\r\n      volumeSliderOnChange={volumeSliderOnChange}\r\n      isMute={props.isMuted}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\ninterface PresenterProps {\r\n  title: string;\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <Grid container className=\"PlayingBoard\" alignItems=\"center\">\r\n      <Grid item xs={1}>\r\n        <Box>\r\n          <svg id=\"icon-audio-disc\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\r\n            <path d=\"M32 2a30 30 0 1 0 30 30A30 30 0 0 0 32 2zm0 58a28 28 0 1 1 28-28 28 28 0 0 1-28 28z\" />\r\n            <path d=\"M32 6A26 26 0 0 0 6 32h2A24 24 0 0 1 32 8zM32 56v2a26 26 0 0 0 26-26h-2a24 24 0 0 1-24 24z\" />\r\n            <path d=\"M32 52v2a22 22 0 0 0 22-22h-2a20 20 0 0 1-20 20z\" />\r\n            <path d=\"M46 32a14 14 0 1 0-14 14 14 14 0 0 0 14-14zm-26 0a12 12 0 1 1 12 12 12 12 0 0 1-12-12z\" />\r\n            <path d=\"M41 32a9 9 0 1 0-9 9 9 9 0 0 0 9-9zm-16 0a7 7 0 1 1 7 7 7 7 0 0 1-7-7z\" />\r\n            <path d=\"M36 32a4 4 0 1 0-4 4 4 4 0 0 0 4-4zm-6 0a2 2 0 1 1 2 2 2 2 0 0 1-2-2zM6 34h2v2H6z\" />\r\n          </svg>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <Box className=\"title\">\r\n          <p>{props.title}</p>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { Presenter } from './Presenter';\r\nimport './main.css';\r\n\r\ninterface PlayingBoardProps {\r\n  videoId: string;\r\n}\r\n\r\nexport const PlayingBoard: React.FC<PlayingBoardProps> = (props: PlayingBoardProps) => {\r\n  const [title, setTitle] = React.useState('');\r\n  const APIKEY: string = process.env.REACT_APP_YOUTUBE_KEY as string;\r\n  React.useEffect(() => {\r\n    if (!props.videoId) return;\r\n    getTitle();\r\n  }, [props.videoId]);\r\n  const getTitle = () => {\r\n    /* axios\r\n      .get(`https://www.googleapis.com/youtube/v3/search?key=${APIKEY}&part=id,snippet`, {\r\n        params: { q: props.videoId }\r\n      })\r\n      .then(({ data, status }) => {\r\n        if (status === 200) {\r\n          // console.log('title data', data);\r\n          try {\r\n            const title = data.items[0].snippet.title;\r\n            setTitle(title);\r\n          } catch {\r\n            setTitle('動画タイトルを取得できませんでした');\r\n          }\r\n        }\r\n      }); */\r\n  };\r\n  return <Presenter title={title} />;\r\n};\r\n","import * as React from 'react';\r\nimport YouTube, { YouTubeProps } from 'react-youtube';\r\nimport { YouTubePlayer } from 'youtube-player/dist/types';\r\nimport { YoutubeController } from '../YoutubeController';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport './main.css';\r\nimport { PlayingBoard } from '../PlayingBoard';\r\n\r\nexport interface PresenterProps {\r\n  player: YouTubeProps;\r\n  videoId: string;\r\n  controller: {\r\n    socket: SocketIOClient.Socket;\r\n    youtubeDisp: YouTubePlayer | undefined;\r\n    videoStatus: number;\r\n    volume: number;\r\n    isMuted: boolean;\r\n    changeVolume: (num: number) => void;\r\n    setVolumeLog: (num: number) => void;\r\n    mute: () => void;\r\n    unMute: () => void;\r\n    unMuteForVolumeBar: () => void;\r\n  };\r\n  opts: YouTubeProps['opts'];\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\">\r\n        {/* 最大化の場合は↓を変更 */}\r\n        <Grid item xs={12}>\r\n          <Box style={{ padding: '0 0 10px 0' }}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6} md={4} lg={5} xl={4}>\r\n                <PlayingBoard videoId={props.videoId} />\r\n              </Grid>\r\n              <Grid style={{ background: 'black' }} item xs={12}>\r\n                <YouTube {...props.player} opts={props.opts} className=\"youtube_display\" />\r\n              </Grid>\r\n              <Grid item style={{ background: '#000' }} xs={12}>\r\n                <YoutubeController {...props.controller} />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { State } from '../../store/store';\r\nimport { YouTubePlayer } from 'youtube-player/dist/types';\r\nimport { Presenter } from './Presenter';\r\nimport { YouTubeProps } from 'react-youtube';\r\nimport { RoomState } from '../../store/modules/roomModule';\r\nimport Cookie from 'js-cookie';\r\n\r\ninterface YoutubeWrapProps {\r\n  socket: SocketIOClient.Socket;\r\n  room: RoomState;\r\n}\r\n\r\ninterface YoutubeWrapState {\r\n  youtubeDisp: YouTubePlayer | undefined;\r\n  videoId: string;\r\n  videoStatus: number;\r\n  getAction: boolean;\r\n  isFirst: boolean;\r\n  volume: number;\r\n  volumeLog: number;\r\n  isMuted: boolean;\r\n  opts: YouTubeProps['opts'];\r\n}\r\n\r\nexport class YoutubeWrap extends React.Component<YoutubeWrapProps, YoutubeWrapState> {\r\n  constructor(props: YoutubeWrapProps) {\r\n    super(props);\r\n    this.state = {\r\n      youtubeDisp: undefined, // youtube target\r\n      videoId: '',\r\n      videoStatus: -1, // YouTubeコンポーネントのステータスが変更された時に変更される\r\n      getAction: false,\r\n      isFirst: true, // 参加時かどうかのフラグ\r\n      volume: 0, // ボリューム\r\n      volumeLog: 0, // 変更前のボリューム\r\n      isMuted: true, // ミュートフラグ\r\n      opts: this.defaultOpts(this.isSmartPhone()) // YouTubePlayerのオプション\r\n    };\r\n\r\n    this.mute = this.mute.bind(this);\r\n    this.unMute = this.unMute.bind(this);\r\n    this.changeVolume = this.changeVolume.bind(this);\r\n  }\r\n\r\n  socket = this.props.socket;\r\n\r\n  defaultOpts = (isSmartPhone: boolean): YouTubeProps['opts'] => ({\r\n    width: '100%',\r\n    height: '700px',\r\n    playerVars: {\r\n      controls: isSmartPhone ? 0 : 1,\r\n      rel: 0,\r\n      playsinline: 1,\r\n      fs: 0,\r\n      disablekb: 1,\r\n      modestbranding: 1\r\n    }\r\n  });\r\n\r\n  componentDidUpdate(): void {\r\n    if (this.state.youtubeDisp) {\r\n      this.setUpSocketListenner();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    Cookie.set('streaming_volume', String(this.state.volume));\r\n  }\r\n\r\n  /** socket client Listennerを設定 */\r\n  setUpSocketListenner = (): void => {\r\n    const listenners = [\r\n      'youtube_add_movie',\r\n      'youtube_pause',\r\n      'youtube_play',\r\n      'youtube_seek',\r\n      'request_playing_data',\r\n      'new_playing_data'\r\n    ];\r\n    for (const listenner of listenners) {\r\n      this.socket.off(listenner);\r\n    }\r\n\r\n    this.socket.on('youtube_add_movie', (movie_id: string) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      // console.log('movieId', movie_id);\r\n      this.setState({ videoId: movie_id });\r\n      this.state.youtubeDisp.cueVideoById(movie_id);\r\n      this.setUpBuffer(this.state.youtubeDisp).then(() => {\r\n        this.state.youtubeDisp?.playVideo();\r\n      });\r\n    });\r\n\r\n    this.socket.on('youtube_pause', (time: number) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      // console.log('listen!pause!', time);\r\n      this.setState({ getAction: true }, () => {\r\n        this.state.youtubeDisp?.pauseVideo();\r\n        this.state.youtubeDisp?.seekTo(time, true);\r\n      });\r\n    });\r\n\r\n    this.socket.on('youtube_play', (time: number) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      // console.log('listen!play!', time);\r\n      this.setState({ getAction: true }, () => {\r\n        this.state.youtubeDisp?.playVideo();\r\n      });\r\n    });\r\n\r\n    this.socket.on('youtube_seek', (time: number) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      this.state.youtubeDisp.seekTo(time, true);\r\n    });\r\n\r\n    this.socket.on('request_playing_data', async (participant_id: string) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      const status = this.state.youtubeDisp.getPlayerState();\r\n      const time = this.state.youtubeDisp.getCurrentTime();\r\n      const playingData: { movie_id?: string; time: number; isPlaying: boolean } = {\r\n        time: time || 0.0,\r\n        isPlaying: status ? this.statusCheck(status) : false\r\n      };\r\n      // console.log('プレイングデータをemitします', playingData);\r\n      if (this.state.videoId) {\r\n        playingData.movie_id = this.state.videoId;\r\n      }\r\n      const payload = {\r\n        socket_id: participant_id,\r\n        playingData: playingData\r\n      };\r\n      this.socket.emit('send_playing_data', payload);\r\n    });\r\n\r\n    this.socket.on('new_playing_data', (res: { movie_id?: string; time: number; isPlaying: boolean }) => {\r\n      if (!this.state.youtubeDisp) return;\r\n      // console.log('newplayingData', res);\r\n      if (res.movie_id) {\r\n        this.state.youtubeDisp.cueVideoById(res.movie_id);\r\n        this.setState({ videoId: res.movie_id });\r\n      }\r\n      this.setUpBuffer(this.state.youtubeDisp).then(() => {\r\n        if (res.isPlaying) {\r\n          this.state.youtubeDisp?.seekTo(res.time + 1.5, true);\r\n          this.state.youtubeDisp?.playVideo();\r\n        } else {\r\n          this.state.youtubeDisp?.seekTo(res.time, true);\r\n        }\r\n        window.setTimeout(() => {\r\n          this.setState({ isFirst: false });\r\n        }, 500);\r\n      });\r\n    });\r\n  };\r\n\r\n  /** ステータスナンバーから再生中か停止中かを返す */\r\n  statusCheck = (value: number): boolean => {\r\n    // https://developers.google.com/youtube/iframe_api_reference?hl=ja#Adding_event_listener 参照\r\n    let isPlaying = false;\r\n    switch (value) {\r\n      case -1: // 未開始\r\n        isPlaying = false;\r\n        break;\r\n      case 0: // 終了\r\n        isPlaying = false;\r\n        break;\r\n      case 1: // 再生中\r\n        isPlaying = true;\r\n        break;\r\n      case 2: // 停止\r\n        isPlaying = false;\r\n        break;\r\n      case 3: // バッファリング中\r\n        isPlaying = false;\r\n        break;\r\n      case 5: // 頭出し済み\r\n        isPlaying = false;\r\n        break;\r\n    }\r\n    return isPlaying;\r\n  };\r\n\r\n  /** スマートフォンからのアクセスかどうかの判定 */\r\n  isSmartPhone = (): boolean => {\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /** react-youtubeコンポーネントの設定 */\r\n  player: YouTubeProps = {\r\n    onPlay: ({ target, data }: { target: YouTubePlayer; data: number }) => {\r\n      if (this.state.isFirst) return;\r\n      if (this.state.getAction) {\r\n        this.setState({ getAction: false });\r\n        return;\r\n      }\r\n      this.socket.emit('youtube_play', target.getCurrentTime());\r\n    },\r\n    onPause: ({ target, data }: { target: YouTubePlayer; data: number }) => {\r\n      if (this.state.isFirst) return;\r\n      if (this.state.getAction) {\r\n        this.setState({ getAction: false });\r\n        return;\r\n      }\r\n      this.socket.emit('youtube_pause', target.getCurrentTime());\r\n    },\r\n    onReady: (event: { target: YouTubePlayer }) => {\r\n      const { target } = event;\r\n      this.setState({ youtubeDisp: target });\r\n      // ボリューム情報のセット\r\n      const agent = navigator.userAgent.toLowerCase();\r\n\r\n      // スマホかどうか\r\n      if (this.isSmartPhone()) {\r\n        // スマホの場合\r\n        this.mute();\r\n\r\n        if (this.props.room.isOwner) {\r\n          target.cueVideoById('ZCY5JS-nuz0');\r\n          this.setState({ videoId: 'ZCY5JS-nuz0' }, () => {\r\n            this.setUpBuffer(target).then(() => {\r\n              // console.log('Buffer完了');\r\n              this.setState({ isFirst: false });\r\n            });\r\n          });\r\n        } else {\r\n          this.socket.emit('youtube_sync');\r\n        }\r\n      } else {\r\n        // それ以外の場合\r\n        let defaultVolume = 0;\r\n\r\n        // デフォルトボリュームの取得\r\n        if (agent.match('chrome') && !agent.match('edg')) {\r\n          defaultVolume = target.getVolume();\r\n        } else {\r\n          const cookieVolume = Cookie.get('streaming_volume');\r\n          if (cookieVolume) {\r\n            defaultVolume = Number(cookieVolume);\r\n          } else {\r\n            defaultVolume = 20;\r\n          }\r\n        }\r\n\r\n        /**  コントローラのが表示されているかどうか */\r\n        let prev_flag: number | undefined = 0;\r\n\r\n        this.setState(\r\n          (prev) => {\r\n            // コントローラ表示時のみボリュームログに保存\r\n            prev_flag = prev.opts?.playerVars?.controls;\r\n\r\n            if (prev.opts?.playerVars?.controls === 1) {\r\n              return { ...prev, volumeLog: defaultVolume };\r\n            } else {\r\n              return { ...prev };\r\n            }\r\n          },\r\n          () => {\r\n            // コントローラを非表示にする\r\n            this.setState(\r\n              (prev) => ({\r\n                opts: {\r\n                  ...prev.opts,\r\n                  playerVars: {\r\n                    ...prev.opts?.playerVars,\r\n                    controls: 0\r\n                  }\r\n                }\r\n              }),\r\n              () => {\r\n                target.setVolume(0);\r\n                if (this.props.room.isOwner) {\r\n                  if (prev_flag === 0) {\r\n                    target.cueVideoById('ZCY5JS-nuz0');\r\n                    this.setState({ videoId: 'ZCY5JS-nuz0' }, () => {\r\n                      this.setUpBuffer(target).then(() => {\r\n                        // console.log('Buffer完了');\r\n                        this.setState({ isFirst: false });\r\n                      });\r\n                    });\r\n                  }\r\n                } else {\r\n                  this.socket.emit('youtube_sync');\r\n                }\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    },\r\n    onStateChange: ({ target, data }: { target: YouTubePlayer; data: number }) => {\r\n      // console.log('onStateChange', data);\r\n      this.setState({ videoStatus: data });\r\n    }\r\n    // https://developers.google.com/youtube/player_parameters?hl=ja ここ参照してる\r\n  };\r\n\r\n  /** ミュート状態で1秒間再生し、元に戻して一時停止する初期バッファーを読み込むための関数です */\r\n  setUpBuffer = (target: YouTubePlayer): Promise<boolean> => {\r\n    return new Promise((resolve) => {\r\n      this.mute();\r\n      target.playVideo();\r\n      window.setTimeout(() => {\r\n        target.pauseVideo();\r\n        target.seekTo(0, true);\r\n        if (!this.isSmartPhone()) {\r\n          this.unMute();\r\n        }\r\n        resolve(true);\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  /** ボリュームを変更する */\r\n  changeVolume = (value: number): void => {\r\n    this.state.youtubeDisp?.setVolume(value);\r\n    this.setState({ volume: value });\r\n  };\r\n\r\n  /** ボリュームログを変更する */\r\n  setVolumeLog = (value: number): void => {\r\n    if (value > 5 && value <= 100) {\r\n      this.setState({ volumeLog: value });\r\n    }\r\n  };\r\n\r\n  /** ミュート時の処理 */\r\n  mute = (): void => {\r\n    this.setState({ isMuted: true }, () => {\r\n      this.setState((prev) => {\r\n        if (prev.volume > 5) {\r\n          return { volumeLog: this.state.volume };\r\n        } else {\r\n          return { ...prev };\r\n        }\r\n      });\r\n      this.changeVolume(0);\r\n      this.state.youtubeDisp?.mute();\r\n    });\r\n  };\r\n\r\n  /** アンミュート時の処理 */\r\n  unMute = (): void => {\r\n    this.setState({ isMuted: false });\r\n    this.state.youtubeDisp?.unMute();\r\n    this.state.volumeLog > 1 ? this.changeVolume(this.state.volumeLog) : this.changeVolume(30);\r\n  };\r\n\r\n  /** ボリュームバー操作時のミュート処理 */\r\n  unMuteForVolumeBar = (): void => {\r\n    this.setState({ isMuted: false });\r\n    this.state.youtubeDisp?.unMute();\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Presenter\r\n          player={this.player}\r\n          opts={this.state.opts}\r\n          videoId={this.state.videoId}\r\n          controller={{\r\n            socket: this.socket,\r\n            youtubeDisp: this.state.youtubeDisp,\r\n            videoStatus: this.state.videoStatus,\r\n            volume: this.state.volume,\r\n            isMuted: this.state.isMuted,\r\n            mute: this.mute,\r\n            unMute: this.unMute,\r\n            unMuteForVolumeBar: this.unMuteForVolumeBar,\r\n            changeVolume: this.changeVolume,\r\n            setVolumeLog: this.setVolumeLog\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\n\r\ninterface PresenterProps {\r\n  videoId: string;\r\n  onChange: (value: string) => void;\r\n  addMovieHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <form style={{ width: '100%' }} onSubmit={props.addMovieHandler}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} lg={11} xl={11}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"YouTube Movie URL\"\r\n            color=\"secondary\"\r\n            style={{ borderRadius: 'none', background: '#f9f9f9', height: '100%' }}\r\n            value={props.videoId}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} lg={1} xl={1}>\r\n          <Button\r\n            fullWidth\r\n            type=\"submit\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            style={{ height: '100%' }}\r\n            disableElevation\r\n          >\r\n            変更\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Presenter } from './Presenter';\r\n\r\ninterface AddFormProps {\r\n  socket: SocketIOClient.Socket;\r\n}\r\n\r\nexport const AddForm: React.FC<AddFormProps> = (props: AddFormProps) => {\r\n  const socket = props.socket;\r\n  const [videoId, setVideoId] = React.useState('');\r\n\r\n  const onChange = (value: string) => {\r\n    setVideoId(value);\r\n  };\r\n\r\n  const addMovieHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    socket.emit('youtube_add_movie', videoId);\r\n    setVideoId('');\r\n  };\r\n\r\n  return <Presenter {...{ videoId, onChange, addMovieHandler }} />;\r\n};\r\n","import * as React from 'react';\r\nimport { Box, Grid, Dialog } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { YoutubeWrap } from '../../components/YoutubeWrap';\r\nimport './main.css';\r\nimport { CreateForm, CreateFormProps, InputSub } from '../../components/CreateForm';\r\nimport { AddForm } from '../../components/AddForm';\r\nimport { RoomState } from '../../store/modules/roomModule';\r\n\r\ninterface PresenterProps {\r\n  socket: SocketIOClient.Socket | null;\r\n  room: RoomState;\r\n  nameDialog: boolean;\r\n  createForm: {\r\n    inputs: InputSub[];\r\n    load: boolean;\r\n    onSubmit: () => void;\r\n  };\r\n}\r\n\r\nexport const Presenter: React.FC<PresenterProps> = (props: PresenterProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.room.roomId && props.socket ? (\r\n        <Grid container justify=\"center\" className=\"RoomContainer\">\r\n          <Grid item xs={11} lg={9} xl={9}>\r\n            <Box>\r\n              <YoutubeWrap socket={props.socket} room={props.room} />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={11} lg={9} xl={9}>\r\n            <Box boxSizing=\"border-box\" padding=\"10px 11px\" borderRadius=\"2px\" style={{ background: '#fff' }}>\r\n              <AddForm socket={props.socket} />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        false\r\n      )}\r\n      {props.room.roomId ? (\r\n        false\r\n      ) : (\r\n        <div className=\"base\">\r\n          <div className=\"wave\"></div>\r\n        </div>\r\n      )}\r\n      <Dialog open={props.nameDialog}>\r\n        <CreateForm width=\"100%\" head=\"ユーザーネーム\" btn=\"入室\" {...props.createForm} />\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { VariantType, useSnackbar } from 'notistack';\r\nimport roomModule from '../../store/modules/roomModule';\r\nimport { State } from '../../store/store';\r\nimport { Presenter } from './Presenter';\r\nimport { PageProps } from '../../App';\r\nimport { InputSub } from '../../components/CreateForm';\r\nimport Cookie from 'js-cookie';\r\n\r\nconst Room: React.FC<PageProps> = (props: PageProps) => {\r\n  const [socket, setSocket] = React.useState<SocketIOClient.Socket | null>(null);\r\n  const [nameDialog, setNameDialog] = React.useState<boolean>(false);\r\n  const [enterId, setEnterId] = React.useState<string>('');\r\n  const [load, setLoad] = React.useState<boolean>(false);\r\n  const room = useSelector((state: State) => state.room);\r\n  const history = useHistory();\r\n  const dispach = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  React.useEffect(() => {\r\n    props.getSocket().then((rec_socket) => {\r\n      setSocket(rec_socket);\r\n      // 後でここにルーム存在確認処理を追加\r\n      // ルーム作成ではない場合\r\n      if (!room.roomId) {\r\n        // パラメータからroom_idを取得\r\n        const roomId = getParamValue('room_id');\r\n        if (roomId) {\r\n          rec_socket.emit('check_room', roomId, (res: boolean) => {\r\n            if (res) {\r\n              // Cookie存在時ユーザネームセット処理\r\n              const cookieName = Cookie.get('streaming_name');\r\n              if (cookieName) {\r\n                setUserName({ value: cookieName, error: false, msg: '' });\r\n              }\r\n              // ルーム入室処理\r\n              setEnterId(roomId);\r\n              setNameDialog(true);\r\n            } else {\r\n              sendNotifiction('ルームが存在しませんでした', 'error', { horizontal: 'center', vertical: 'top' });\r\n              history.push('/');\r\n            }\r\n          });\r\n        } else {\r\n          sendNotifiction('ルームが存在しませんでした', 'error', { horizontal: 'center', vertical: 'top' });\r\n          history.push('/');\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      props.clearSocket();\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on('user_joined', (res: { user: { id: string; name: string } }) => {\r\n      sendNotifiction(res.user.name + 'が入室しました', 'success');\r\n    });\r\n    socket.on('user_left', (res: { user: { id: string; name: string } }) => {\r\n      sendNotifiction(res.user.name + 'が退出しました', 'error');\r\n    });\r\n  }, [socket]);\r\n\r\n  const joinRoom = (socket: SocketIOClient.Socket, option: { roomId: string }) => {\r\n    if (!socket) return sendNotifiction('入室に失敗しました', 'error', { horizontal: 'center', vertical: 'top' });\r\n    socket.emit('join_room', { room_id: option.roomId, user_name: userName.value }, (res: boolean) => {\r\n      if (res) {\r\n        dispach(roomModule.actions.setRoom({ roomId: option.roomId, userName: userName.value, isOwner: false }));\r\n        setNameDialog(false);\r\n      } else {\r\n        sendNotifiction('入室に失敗しました', 'error', { horizontal: 'center', vertical: 'top' });\r\n        history.push('/');\r\n      }\r\n      setLoad(false);\r\n    });\r\n  };\r\n\r\n  const getParamValue = (key: string): string | null => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const value = params.get(key);\r\n    return value;\r\n  };\r\n\r\n  const sendNotifiction = (\r\n    message: string,\r\n    variant: VariantType,\r\n    position: { horizontal: 'left' | 'center' | 'right'; vertical: 'top' | 'bottom' } = {\r\n      horizontal: 'left',\r\n      vertical: 'bottom'\r\n    }\r\n  ) => {\r\n    if (screen.width < 600) return;\r\n    enqueueSnackbar(message, {\r\n      variant,\r\n      anchorOrigin: { horizontal: position.horizontal, vertical: position.vertical },\r\n      autoHideDuration: 2000\r\n    });\r\n  };\r\n\r\n  // ユーザネーム入力に参照するstate\r\n  const [userName, setUserName] = React.useState({\r\n    value: 'Guest',\r\n    error: false,\r\n    msg: ''\r\n  });\r\n\r\n  const inputs: InputSub[] = [\r\n    {\r\n      label: '',\r\n      placeholder: '須鳥武 太郎',\r\n      value: userName.value,\r\n      error: userName.error,\r\n      msg: userName.msg,\r\n      onChange: function (value: string) {\r\n        const { error, msg } = this.validate(value);\r\n        setUserName({ value, error, msg });\r\n      },\r\n      validate: (val: string) => {\r\n        const response = { error: false, msg: '' };\r\n        if (val === '') {\r\n          response.error = true;\r\n          response.msg = 'ユーザネームを入力してください';\r\n        } else if (val.length > 13) {\r\n          response.error = true;\r\n          response.msg = '12文字以内で入力してください';\r\n        }\r\n        return response;\r\n      }\r\n    }\r\n  ];\r\n\r\n  const enterSubmitHandler = () => {\r\n    if (!socket) return;\r\n    setLoad(true);\r\n    // console.log('enterSubmitHandler', socket, enterId);\r\n    Cookie.set('streaming_name', userName.value);\r\n    joinRoom(socket, { roomId: enterId });\r\n  };\r\n\r\n  return (\r\n    <Presenter\r\n      socket={socket}\r\n      room={room}\r\n      nameDialog={nameDialog}\r\n      createForm={{ inputs, load, onSubmit: enterSubmitHandler }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"sourceRoot":""}