{"version":3,"sources":["store/store.ts","config/theme.ts","components/Loading/index.tsx","config/route.tsx","App.tsx","reportWebVitals.ts","index.tsx","store/modules/roomModule.ts"],"names":["rootReducer","combineReducers","room","roomModule","reducer","theme","createMuiTheme","palette","primary","main","contrastText","secondary","info","background","default","typography","fontFamily","join","Loading","Box","display","justifyContent","alignItems","className","style","CircularProgress","size","color","Home","React","lazy","Promise","all","resolve","setTimeout","then","Room","Header","Routes","props","Suspense","fallback","path","exact","App","useStateWithCallbackLazy","socket","setSocket","ThemeProvider","maxSnack","getSocket","client","io","connect","process","on","clearSocket","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","middlewares","getDefaultMiddleware","configureStore","middleware","setUpStore","ReactDOM","render","StrictMode","document","getElementById","roomInitialState","roomId","userName","isOwner","socketsModule","createSlice","name","initialState","reducers","setRoom","state","action","Object","assign","payload","unsetRoom"],"mappings":"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","file":"static/js/main.ece04565.chunk.js","sourcesContent":["import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport roomModule, { RoomState } from './modules/roomModule';\r\n\r\nexport interface State {\r\n  room: RoomState;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  room: roomModule.reducer\r\n});\r\n\r\nexport const setUpStore = () => {\r\n  const middlewares = [...getDefaultMiddleware() /* , logger */];\r\n  const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: middlewares\r\n  });\r\n  return store;\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#fff',\r\n      contrastText: '#555'\r\n    },\r\n    secondary: {\r\n      main: '#1dd1a1',\r\n      contrastText: '#fefefe'\r\n    },\r\n    info: {\r\n      main: '#1289A7'\r\n    },\r\n    background: {\r\n      default: '#fffafa'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: ['Noto Sans JP', 'Lato', '游ゴシック Medium', '游ゴシック体'].join(',')\r\n    /* fontSize: 16,\r\n        h1: {\r\n          fontSize: '1.75rem',\r\n        },\r\n        h2: {\r\n          fontSize: '1.5rem',\r\n        },\r\n        h3: {\r\n          fontSize: '1.25rem',\r\n        },\r\n        h4: {\r\n          fontSize: '1.125rem',\r\n        },\r\n        h5: {\r\n          fontSize: '1rem',\r\n        },\r\n        h6: {\r\n          fontSize: '1rem',\r\n        }, */\r\n  }\r\n});\r\n","import * as React from 'react';\r\nimport { Box, CircularProgress } from '@material-ui/core';\r\nimport './main.css';\r\n\r\n/** ローディング画面 */\r\nexport const Loading: React.FC = () => {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"loadBox\"\r\n      style={{ background: 'linear-gradient(45deg, #23d5ab,#23a6d5,#ee7752)' }}\r\n    >\r\n      <CircularProgress size={60} style={{ color: '#fff' }} />\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Loading } from '../components/Loading';\r\nimport { PageProps } from '../App';\r\n\r\nconst Home = React.lazy(() => {\r\n  return Promise.all([import('../pages/Home'), new Promise((resolve) => setTimeout(resolve, 500))]).then(\r\n    ([moduleExports]) => moduleExports\r\n  );\r\n});\r\nconst Room = React.lazy(() => {\r\n  return Promise.all([import('../pages/Room'), new Promise((resolve) => setTimeout(resolve, 500))]).then(\r\n    ([moduleExports]) => moduleExports\r\n  );\r\n});\r\nconst Header = React.lazy(() => {\r\n  return Promise.all([import('../components/Header'), new Promise((resolve) => setTimeout(resolve, 0))]).then(\r\n    ([moduleExports]) => moduleExports\r\n  );\r\n});\r\n\r\nexport const Routes: React.FC<PageProps> = (props) => {\r\n  return (\r\n    <Router>\r\n      <React.Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          <Route path=\"/\" exact={true}>\r\n            <Home {...props} />\r\n          </Route>\r\n          <Route path=\"/room\" exact={true}>\r\n            <Header />\r\n            <Room {...props} />\r\n          </Route>\r\n        </Switch>\r\n      </React.Suspense>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport io from 'socket.io-client';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { theme } from './config/theme';\r\nimport { Routes } from './config/route';\r\nimport { useStateWithCallbackLazy } from 'use-state-with-callback';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nexport interface PageProps {\r\n  getSocket(): Promise<SocketIOClient.Socket>;\r\n  clearSocket(): void;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [socket, setSocket] = useStateWithCallbackLazy<SocketIOClient.Socket | null>(null);\r\n\r\n  // websocketに接続し、socket clientを返却\r\n  const getSocket = (): Promise<SocketIOClient.Socket> => {\r\n    // console.log('getSocket');\r\n    return new Promise((resolve) => {\r\n      if (!socket) {\r\n        // 接続開始\r\n        const client = io.connect(process.env.REACT_APP_API_URL as string);\r\n        client.on('connect', () => {\r\n          // console.log('connected');\r\n          // 別ページからも参照できるようにstateにセット\r\n          setSocket(client, function () {\r\n            // 接続が接続が成功した際にsocket clientを返却\r\n            resolve(client);\r\n          });\r\n        });\r\n      } else {\r\n        // 接続済みだった場合stateのsocket clientを返却\r\n        return resolve(socket);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearSocket = (): void => {\r\n    socket?.disconnect();\r\n    setSocket(null, () => {\r\n      // console.log('clear socket');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={1}>\r\n        <Routes getSocket={getSocket} clearSocket={clearSocket} />\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { setUpStore } from './store/store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst store = setUpStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface RoomState {\r\n  roomId: string;\r\n  userName: string;\r\n  isOwner: boolean;\r\n}\r\n\r\nconst roomInitialState: RoomState = {\r\n  roomId: '',\r\n  userName: '',\r\n  isOwner: false\r\n};\r\n\r\n// createSliceメソッドを使ってactionsとreducersを生成\r\nconst socketsModule = createSlice({\r\n  name: 'room',\r\n  initialState: roomInitialState,\r\n  reducers: {\r\n    setRoom: (state, action: PayloadAction<RoomState>) => {\r\n      Object.assign(state, action.payload);\r\n    },\r\n    unsetRoom: (state, action: PayloadAction) => {\r\n      Object.assign(state, roomInitialState);\r\n    }\r\n  }\r\n});\r\n\r\nexport default socketsModule;\r\n"],"sourceRoot":""}